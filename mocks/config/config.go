// Code generated by MockGen. DO NOT EDIT.
// Source: app/config/app.go

// Package mock_config is a generated GoMock package.
package mock_config

import (
	context "context"
	reflect "reflect"
	config "weathersvc/app/config"

	gomock "github.com/golang/mock/gomock"
)

// MockAppConfig is a mock of AppConfig interface.
type MockAppConfig struct {
	ctrl     *gomock.Controller
	recorder *MockAppConfigMockRecorder
}

// MockAppConfigMockRecorder is the mock recorder for MockAppConfig.
type MockAppConfigMockRecorder struct {
	mock *MockAppConfig
}

// NewMockAppConfig creates a new mock instance.
func NewMockAppConfig(ctrl *gomock.Controller) *MockAppConfig {
	mock := &MockAppConfig{ctrl: ctrl}
	mock.recorder = &MockAppConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAppConfig) EXPECT() *MockAppConfigMockRecorder {
	return m.recorder
}

// NewApp mocks base method.
func (m *MockAppConfig) NewApp(ctx context.Context) (*config.App, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewApp", ctx)
	ret0, _ := ret[0].(*config.App)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewApp indicates an expected call of NewApp.
func (mr *MockAppConfigMockRecorder) NewApp(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewApp", reflect.TypeOf((*MockAppConfig)(nil).NewApp), ctx)
}
